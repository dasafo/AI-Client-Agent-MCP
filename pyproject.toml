[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-client-agent-mcp"
version = "0.1.0"
description = "Advanced backend system for managing clients and their invoices, designed to be operated by an AI Agent or programmatically"
readme = "README.md"
requires-python = ">=3.11,<4.0"
license = "MIT"
authors = [
    { name = "David Salas", email = "dsf@protonmail.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial :: Accounting",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
    "fastmcp>=2.5.1",
    "asyncpg>=0.29.0",
    "pydantic>=2.5.0",
    "email-validator>=2.1.0",
    "python-dotenv>=1.0.0",
    "aiohttp>=3.9.0",
    "openai>=1.0.0",
    "jinja2>=3.1.0",
    "bleach>=6.1.0",
    "plotly>=5.18.0",
    "pandas>=2.1.0",
    "matplotlib>=3.8.0",
]

[tool.hatch.build.targets.wheel]
packages = ["backend"]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "pre-commit>=3.5.0",
]

[tool.pytest.ini_options]
asyncio_mode = "strict"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=backend --cov-report=term-missing"

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
]
ignore = []

[tool.ruff.isort]
known-first-party = ["backend"]

[tool.coverage.run]
source = ["backend"]
omit = [
    "tests/*",
    "**/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "pass",
    "raise ImportError",
] 